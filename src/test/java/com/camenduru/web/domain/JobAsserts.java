package com.camenduru.web.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class JobAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertJobAllPropertiesEquals(Job expected, Job actual) {
        assertJobAutoGeneratedPropertiesEquals(expected, actual);
        assertJobAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertJobAllUpdatablePropertiesEquals(Job expected, Job actual) {
        assertJobUpdatableFieldsEquals(expected, actual);
        assertJobUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertJobAutoGeneratedPropertiesEquals(Job expected, Job actual) {
        assertThat(expected)
            .as("Verify Job auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertJobUpdatableFieldsEquals(Job expected, Job actual) {
        assertThat(expected)
            .as("Verify Job relevant properties")
            .satisfies(e -> assertThat(e.getDate()).as("check date").isEqualTo(actual.getDate()))
            .satisfies(e -> assertThat(e.getStatus()).as("check status").isEqualTo(actual.getStatus()))
            .satisfies(e -> assertThat(e.getSource()).as("check source").isEqualTo(actual.getSource()))
            .satisfies(e -> assertThat(e.getSourceID()).as("check sourceID").isEqualTo(actual.getSourceID()))
            .satisfies(e -> assertThat(e.getSourceChannel()).as("check sourceChannel").isEqualTo(actual.getSourceChannel()))
            .satisfies(e -> assertThat(e.getSourceUsername()).as("check sourceUsername").isEqualTo(actual.getSourceUsername()))
            .satisfies(e -> assertThat(e.getCommand()).as("check command").isEqualTo(actual.getCommand()))
            .satisfies(e -> assertThat(e.getType()).as("check type").isEqualTo(actual.getType()))
            .satisfies(e -> assertThat(e.getAmount()).as("check amount").isEqualTo(actual.getAmount()))
            .satisfies(e -> assertThat(e.getTotal()).as("check total").isEqualTo(actual.getTotal()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertJobUpdatableRelationshipsEquals(Job expected, Job actual) {}
}
