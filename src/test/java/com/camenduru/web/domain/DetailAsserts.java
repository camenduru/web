package com.camenduru.web.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class DetailAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDetailAllPropertiesEquals(Detail expected, Detail actual) {
        assertDetailAutoGeneratedPropertiesEquals(expected, actual);
        assertDetailAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDetailAllUpdatablePropertiesEquals(Detail expected, Detail actual) {
        assertDetailUpdatableFieldsEquals(expected, actual);
        assertDetailUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDetailAutoGeneratedPropertiesEquals(Detail expected, Detail actual) {
        assertThat(expected)
            .as("Verify Detail auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDetailUpdatableFieldsEquals(Detail expected, Detail actual) {
        assertThat(expected)
            .as("Verify Detail relevant properties")
            .satisfies(e -> assertThat(e.getDiscord()).as("check discord").isEqualTo(actual.getDiscord()))
            .satisfies(e -> assertThat(e.getSourceId()).as("check sourceId").isEqualTo(actual.getSourceId()))
            .satisfies(e -> assertThat(e.getSourceChannel()).as("check sourceChannel").isEqualTo(actual.getSourceChannel()))
            .satisfies(e -> assertThat(e.getTotal()).as("check total").isEqualTo(actual.getTotal()))
            .satisfies(e -> assertThat(e.getLogin()).as("check login").isEqualTo(actual.getLogin()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDetailUpdatableRelationshipsEquals(Detail expected, Detail actual) {}
}
