package com.camenduru.web.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class TypeAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTypeAllPropertiesEquals(Type expected, Type actual) {
        assertTypeAutoGeneratedPropertiesEquals(expected, actual);
        assertTypeAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTypeAllUpdatablePropertiesEquals(Type expected, Type actual) {
        assertTypeUpdatableFieldsEquals(expected, actual);
        assertTypeUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTypeAutoGeneratedPropertiesEquals(Type expected, Type actual) {
        assertThat(expected)
            .as("Verify Type auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTypeUpdatableFieldsEquals(Type expected, Type actual) {
        assertThat(expected)
            .as("Verify Type relevant properties")
            .satisfies(e -> assertThat(e.getType()).as("check type").isEqualTo(actual.getType()))
            .satisfies(e -> assertThat(e.getAmount()).as("check amount").isEqualTo(actual.getAmount()))
            .satisfies(e -> assertThat(e.getSchema()).as("check schema").isEqualTo(actual.getSchema()))
            .satisfies(e -> assertThat(e.getModel()).as("check model").isEqualTo(actual.getModel()))
            .satisfies(e -> assertThat(e.getTitle()).as("check title").isEqualTo(actual.getTitle()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()))
            .satisfies(e -> assertThat(e.getImage()).as("check image").isEqualTo(actual.getImage()))
            .satisfies(e -> assertThat(e.getReadme()).as("check readme").isEqualTo(actual.getReadme()))
            .satisfies(e -> assertThat(e.getWeb()).as("check web").isEqualTo(actual.getWeb()))
            .satisfies(e -> assertThat(e.getPaper()).as("check paper").isEqualTo(actual.getPaper()))
            .satisfies(e -> assertThat(e.getCode()).as("check code").isEqualTo(actual.getCode()))
            .satisfies(e -> assertThat(e.getJupyter()).as("check jupyter").isEqualTo(actual.getJupyter()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTypeUpdatableRelationshipsEquals(Type expected, Type actual) {}
}
